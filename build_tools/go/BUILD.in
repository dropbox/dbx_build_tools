package(default_visibility = ["//visibility:public"])

load("//build_tools/bazel:config.bzl", "dbx_string_value")
load("//build_tools/go:go.bzl", "dbx_go_binary", "go_toolchain")
load("//build_tools/sh:sh.bzl", "dbx_sh_binary")

dbx_py_library(
    name = "env",
    srcs = ["env.py"],
)

go_toolchain(
    name = "go1.18",
    asm = "@go_1_18_linux_amd64_tar_gz//:asm",
    asm_inputs = "@go_1_18_linux_amd64_tar_gz//:asm-inputs",
    cgo = "@go_1_18_linux_amd64_tar_gz//:cgo",
    compile = "@go_1_18_linux_amd64_tar_gz//:compile",
    cover = "@go_1_18_linux_amd64_tar_gz//:cover",
    include_dir = "external/go_1_18_linux_amd64_tar_gz/go/pkg/include",
    link = "@go_1_18_linux_amd64_tar_gz//:link",
    pack = "@go_1_18_linux_amd64_tar_gz//:pack",
    stdlib = "@go_1_18_linux_amd64_tar_gz//:stdlib",
    stdlib_race = "@go_1_18_linux_amd64_tar_gz//:stdlib-race",
    taglist = [
        "go1.1",
        "go1.2",
        "go1.3",
        "go1.4",
        "go1.5",
        "go1.6",
        "go1.7",
        "go1.8",
        "go1.9",
        "go1.10",
        "go1.11",
        "go1.12",
        "go1.13",
        "go1.14",
        "go1.15",
        "go1.16",
        "go1.17",
        "go1.18",
    ],
    version = "1.18",
)

go_toolchain(
    name = "go1.19",
    asm = "@go_1_19_linux_amd64_tar_gz//:asm",
    asm_inputs = "@go_1_19_linux_amd64_tar_gz//:asm-inputs",
    cgo = "@go_1_19_linux_amd64_tar_gz//:cgo",
    compile = "@go_1_19_linux_amd64_tar_gz//:compile",
    cover = "@go_1_19_linux_amd64_tar_gz//:cover",
    include_dir = "external/go_1_19_linux_amd64_tar_gz/go/pkg/include",
    link = "@go_1_19_linux_amd64_tar_gz//:link",
    pack = "@go_1_19_linux_amd64_tar_gz//:pack",
    stdlib = "@go_1_19_linux_amd64_tar_gz//:stdlib",
    stdlib_race = "@go_1_19_linux_amd64_tar_gz//:stdlib-race",
    taglist = [
        "go1.1",
        "go1.2",
        "go1.3",
        "go1.4",
        "go1.5",
        "go1.6",
        "go1.7",
        "go1.8",
        "go1.9",
        "go1.10",
        "go1.11",
        "go1.12",
        "go1.13",
        "go1.14",
        "go1.15",
        "go1.16",
        "go1.17",
        "go1.18",
        "go1.19",
    ],
    version = "1.19",
)

dbx_sh_binary(
    name = "go_test_wrapper",
    testonly = True,
    srcs = ["go_test_wrapper.sh"],
    data = [
        "//go/src/dropbox/build_tools/gojunit/gojunit",
        "@go_1_19_linux_amd64_tar_gz//:test2json",
    ] + select({
        "//build_tools:coverage-enabled": ["//go/src/dropbox/build_tools/gocov2cobertura"],
        "//conditions:default": [],
    }),
)

dbx_go_binary(
    name = "generate_test_main",
    srcs = ["generate_test_main.go"],
    data = ["test_main.go.tmpl"],
    generate_norace_binary = True,
    deps = [],
)

dbx_string_value(
    name = "go_race",
    value = select({
        ":use-go-race": "define-go_race",
        ":rules-go-race": "define-go_race",
        "//conditions:default": "define-none",
    }),
)

dbx_string_value(
    name = "go_cover",
    value = select({
        ":use-go-cover": "define-go_cover",
        "//conditions:default": "define-none",
    }),
)

dbx_string_value(
    name = "go_cdbg",
    value = select({
        ":go-cdbg": "define-go_cdbg",
        ":rules-go-cdbg": "define-go_cdbg",
        "//conditions:default": "define-none",
    }),
)

# Allow enabling the Go race detector with --define go_race=1
config_setting(
    name = "use-go-race",
    values = {
        "define": "go_race=1",
    },
)

config_setting(
    name = "rules-go-race",
    flag_values = {
        "@io_bazel_rules_go//go/config:race": "true",
    },
)

# Allow enabling test coverage for Go with --define go_cover=1
config_setting(
    name = "use-go-cover",
    values = {
        "define": "go_cover=1",
    },
)

# Allow compiling go code with debug flag in any compilation mode
config_setting(
    name = "go-cdbg",
    values = {
        "define": "go_cdbg=1",
    },
)

config_setting(
    name = "rules-go-cdbg",
    flag_values = {
        "@io_bazel_rules_go//go/config:debug": "true",
    },
)

exports_files(
    ["dbx_go_gen_build_srcs.bzl"],
    visibility = ["//go/src/dropbox/build_tools/update-gen-build-go-srcs:__pkg__"],
)
