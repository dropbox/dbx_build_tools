// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.21.12
// source: dropbox/proto/build_tools/svclib/service.proto

package svclib

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type HealthCheck_Type int32

const (
	HealthCheck_UNKNOWN HealthCheck_Type = 0
	HealthCheck_COMMAND HealthCheck_Type = 1
	HealthCheck_HTTP    HealthCheck_Type = 5
)

// Enum value maps for HealthCheck_Type.
var (
	HealthCheck_Type_name = map[int32]string{
		0: "UNKNOWN",
		1: "COMMAND",
		5: "HTTP",
	}
	HealthCheck_Type_value = map[string]int32{
		"UNKNOWN": 0,
		"COMMAND": 1,
		"HTTP":    5,
	}
)

func (x HealthCheck_Type) Enum() *HealthCheck_Type {
	p := new(HealthCheck_Type)
	*p = x
	return p
}

func (x HealthCheck_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (HealthCheck_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_dropbox_proto_build_tools_svclib_service_proto_enumTypes[0].Descriptor()
}

func (HealthCheck_Type) Type() protoreflect.EnumType {
	return &file_dropbox_proto_build_tools_svclib_service_proto_enumTypes[0]
}

func (x HealthCheck_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *HealthCheck_Type) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = HealthCheck_Type(num)
	return nil
}

// Deprecated: Use HealthCheck_Type.Descriptor instead.
func (HealthCheck_Type) EnumDescriptor() ([]byte, []int) {
	return file_dropbox_proto_build_tools_svclib_service_proto_rawDescGZIP(), []int{2, 0}
}

type Service_Type int32

const (
	Service_DAEMON Service_Type = 0
	Service_TASK   Service_Type = 1
)

// Enum value maps for Service_Type.
var (
	Service_Type_name = map[int32]string{
		0: "DAEMON",
		1: "TASK",
	}
	Service_Type_value = map[string]int32{
		"DAEMON": 0,
		"TASK":   1,
	}
)

func (x Service_Type) Enum() *Service_Type {
	p := new(Service_Type)
	*p = x
	return p
}

func (x Service_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Service_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_dropbox_proto_build_tools_svclib_service_proto_enumTypes[1].Descriptor()
}

func (Service_Type) Type() protoreflect.EnumType {
	return &file_dropbox_proto_build_tools_svclib_service_proto_enumTypes[1]
}

func (x Service_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *Service_Type) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = Service_Type(num)
	return nil
}

// Deprecated: Use Service_Type.Descriptor instead.
func (Service_Type) EnumDescriptor() ([]byte, []int) {
	return file_dropbox_proto_build_tools_svclib_service_proto_rawDescGZIP(), []int{3, 0}
}

type StatusResp_StatusCode int32

const (
	StatusResp_STOPPED               StatusResp_StatusCode = 0
	StatusResp_ERROR                 StatusResp_StatusCode = 1
	StatusResp_STARTING              StatusResp_StatusCode = 2
	StatusResp_STARTED               StatusResp_StatusCode = 3
	StatusResp_WAITING_FOR_DEPENDENT StatusResp_StatusCode = 4
	StatusResp_COMPLETED             StatusResp_StatusCode = 5 // unused
	StatusResp_STOPPING              StatusResp_StatusCode = 6
)

// Enum value maps for StatusResp_StatusCode.
var (
	StatusResp_StatusCode_name = map[int32]string{
		0: "STOPPED",
		1: "ERROR",
		2: "STARTING",
		3: "STARTED",
		4: "WAITING_FOR_DEPENDENT",
		5: "COMPLETED",
		6: "STOPPING",
	}
	StatusResp_StatusCode_value = map[string]int32{
		"STOPPED":               0,
		"ERROR":                 1,
		"STARTING":              2,
		"STARTED":               3,
		"WAITING_FOR_DEPENDENT": 4,
		"COMPLETED":             5,
		"STOPPING":              6,
	}
)

func (x StatusResp_StatusCode) Enum() *StatusResp_StatusCode {
	p := new(StatusResp_StatusCode)
	*p = x
	return p
}

func (x StatusResp_StatusCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (StatusResp_StatusCode) Descriptor() protoreflect.EnumDescriptor {
	return file_dropbox_proto_build_tools_svclib_service_proto_enumTypes[2].Descriptor()
}

func (StatusResp_StatusCode) Type() protoreflect.EnumType {
	return &file_dropbox_proto_build_tools_svclib_service_proto_enumTypes[2]
}

func (x StatusResp_StatusCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *StatusResp_StatusCode) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = StatusResp_StatusCode(num)
	return nil
}

// Deprecated: Use StatusResp_StatusCode.Descriptor instead.
func (StatusResp_StatusCode) EnumDescriptor() ([]byte, []int) {
	return file_dropbox_proto_build_tools_svclib_service_proto_rawDescGZIP(), []int{9, 0}
}

type StatusResp_FailureMessage_FailureType int32

const (
	StatusResp_FailureMessage_UNKNOWN   StatusResp_FailureMessage_FailureType = 0
	StatusResp_FailureMessage_HAS_RACES StatusResp_FailureMessage_FailureType = 1
)

// Enum value maps for StatusResp_FailureMessage_FailureType.
var (
	StatusResp_FailureMessage_FailureType_name = map[int32]string{
		0: "UNKNOWN",
		1: "HAS_RACES",
	}
	StatusResp_FailureMessage_FailureType_value = map[string]int32{
		"UNKNOWN":   0,
		"HAS_RACES": 1,
	}
)

func (x StatusResp_FailureMessage_FailureType) Enum() *StatusResp_FailureMessage_FailureType {
	p := new(StatusResp_FailureMessage_FailureType)
	*p = x
	return p
}

func (x StatusResp_FailureMessage_FailureType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (StatusResp_FailureMessage_FailureType) Descriptor() protoreflect.EnumDescriptor {
	return file_dropbox_proto_build_tools_svclib_service_proto_enumTypes[3].Descriptor()
}

func (StatusResp_FailureMessage_FailureType) Type() protoreflect.EnumType {
	return &file_dropbox_proto_build_tools_svclib_service_proto_enumTypes[3]
}

func (x StatusResp_FailureMessage_FailureType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *StatusResp_FailureMessage_FailureType) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = StatusResp_FailureMessage_FailureType(num)
	return nil
}

// Deprecated: Use StatusResp_FailureMessage_FailureType.Descriptor instead.
func (StatusResp_FailureMessage_FailureType) EnumDescriptor() ([]byte, []int) {
	return file_dropbox_proto_build_tools_svclib_service_proto_rawDescGZIP(), []int{9, 0, 0}
}

type Command struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd     *string                        `protobuf:"bytes,1,opt,name=cmd" json:"cmd,omitempty"` // required
	EnvVars []*Command_EnvironmentVariable `protobuf:"bytes,2,rep,name=env_vars,json=envVars" json:"env_vars,omitempty"`
}

func (x *Command) Reset() {
	*x = Command{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dropbox_proto_build_tools_svclib_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Command) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Command) ProtoMessage() {}

func (x *Command) ProtoReflect() protoreflect.Message {
	mi := &file_dropbox_proto_build_tools_svclib_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Command.ProtoReflect.Descriptor instead.
func (*Command) Descriptor() ([]byte, []int) {
	return file_dropbox_proto_build_tools_svclib_service_proto_rawDescGZIP(), []int{0}
}

func (x *Command) GetCmd() string {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return ""
}

func (x *Command) GetEnvVars() []*Command_EnvironmentVariable {
	if x != nil {
		return x.EnvVars
	}
	return nil
}

type HttpHealthCheck struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url *string `protobuf:"bytes,1,opt,name=url" json:"url,omitempty"`
}

func (x *HttpHealthCheck) Reset() {
	*x = HttpHealthCheck{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dropbox_proto_build_tools_svclib_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HttpHealthCheck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HttpHealthCheck) ProtoMessage() {}

func (x *HttpHealthCheck) ProtoReflect() protoreflect.Message {
	mi := &file_dropbox_proto_build_tools_svclib_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HttpHealthCheck.ProtoReflect.Descriptor instead.
func (*HttpHealthCheck) Descriptor() ([]byte, []int) {
	return file_dropbox_proto_build_tools_svclib_service_proto_rawDescGZIP(), []int{1}
}

func (x *HttpHealthCheck) GetUrl() string {
	if x != nil && x.Url != nil {
		return *x.Url
	}
	return ""
}

type HealthCheck struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type            *HealthCheck_Type `protobuf:"varint,1,opt,name=type,enum=build_tools.HealthCheck_Type" json:"type,omitempty"` // required
	Cmd             *Command          `protobuf:"bytes,2,opt,name=cmd" json:"cmd,omitempty"`
	HttpHealthCheck *HttpHealthCheck  `protobuf:"bytes,6,opt,name=http_health_check,json=httpHealthCheck" json:"http_health_check,omitempty"`
}

func (x *HealthCheck) Reset() {
	*x = HealthCheck{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dropbox_proto_build_tools_svclib_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HealthCheck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthCheck) ProtoMessage() {}

func (x *HealthCheck) ProtoReflect() protoreflect.Message {
	mi := &file_dropbox_proto_build_tools_svclib_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthCheck.ProtoReflect.Descriptor instead.
func (*HealthCheck) Descriptor() ([]byte, []int) {
	return file_dropbox_proto_build_tools_svclib_service_proto_rawDescGZIP(), []int{2}
}

func (x *HealthCheck) GetType() HealthCheck_Type {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return HealthCheck_UNKNOWN
}

func (x *HealthCheck) GetCmd() *Command {
	if x != nil {
		return x.Cmd
	}
	return nil
}

func (x *HealthCheck) GetHttpHealthCheck() *HttpHealthCheck {
	if x != nil {
		return x.HttpHealthCheck
	}
	return nil
}

type Service struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Unique service name
	ServiceName *string `protobuf:"bytes,1,opt,name=service_name,json=serviceName" json:"service_name,omitempty"` // required
	// Full command line to be executed to launch service
	LaunchCmd *Command `protobuf:"bytes,2,opt,name=launch_cmd,json=launchCmd" json:"launch_cmd,omitempty"` // required
	// Shell command to execute for verifying the service is running. Command will be retried till
	// exit code of 0 is observed.
	HealthChecks []*HealthCheck `protobuf:"bytes,9,rep,name=health_checks,json=healthChecks" json:"health_checks,omitempty"`
	// List of service names of dependent services.
	Dependencies []string      `protobuf:"bytes,4,rep,name=dependencies" json:"dependencies,omitempty"`
	StopCmd      *Command      `protobuf:"bytes,7,opt,name=stop_cmd,json=stopCmd" json:"stop_cmd,omitempty"`
	Type         *Service_Type `protobuf:"varint,8,opt,name=type,enum=build_tools.Service_Type" json:"type,omitempty"`
	// Always print this service verbosely. Default false.
	Verbose *bool `protobuf:"varint,10,opt,name=verbose" json:"verbose,omitempty"`
	// Optional string identifying the owner of the service
	Owner *string `protobuf:"bytes,11,opt,name=owner" json:"owner,omitempty"`
	// deprecated fields
	HealthChecksDeprecated []*Command `protobuf:"bytes,3,rep,name=health_checks_deprecated,json=healthChecksDeprecated" json:"health_checks_deprecated,omitempty"`
	// files to watch for restart purposes
	VersionFiles []string `protobuf:"bytes,12,rep,name=version_files,json=versionFiles" json:"version_files,omitempty"`
}

func (x *Service) Reset() {
	*x = Service{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dropbox_proto_build_tools_svclib_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Service) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Service) ProtoMessage() {}

func (x *Service) ProtoReflect() protoreflect.Message {
	mi := &file_dropbox_proto_build_tools_svclib_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Service.ProtoReflect.Descriptor instead.
func (*Service) Descriptor() ([]byte, []int) {
	return file_dropbox_proto_build_tools_svclib_service_proto_rawDescGZIP(), []int{3}
}

func (x *Service) GetServiceName() string {
	if x != nil && x.ServiceName != nil {
		return *x.ServiceName
	}
	return ""
}

func (x *Service) GetLaunchCmd() *Command {
	if x != nil {
		return x.LaunchCmd
	}
	return nil
}

func (x *Service) GetHealthChecks() []*HealthCheck {
	if x != nil {
		return x.HealthChecks
	}
	return nil
}

func (x *Service) GetDependencies() []string {
	if x != nil {
		return x.Dependencies
	}
	return nil
}

func (x *Service) GetStopCmd() *Command {
	if x != nil {
		return x.StopCmd
	}
	return nil
}

func (x *Service) GetType() Service_Type {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return Service_DAEMON
}

func (x *Service) GetVerbose() bool {
	if x != nil && x.Verbose != nil {
		return *x.Verbose
	}
	return false
}

func (x *Service) GetOwner() string {
	if x != nil && x.Owner != nil {
		return *x.Owner
	}
	return ""
}

func (x *Service) GetHealthChecksDeprecated() []*Command {
	if x != nil {
		return x.HealthChecksDeprecated
	}
	return nil
}

func (x *Service) GetVersionFiles() []string {
	if x != nil {
		return x.VersionFiles
	}
	return nil
}

type CreateBatchReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Services []*Service `protobuf:"bytes,1,rep,name=services" json:"services,omitempty"` // required
}

func (x *CreateBatchReq) Reset() {
	*x = CreateBatchReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dropbox_proto_build_tools_svclib_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateBatchReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateBatchReq) ProtoMessage() {}

func (x *CreateBatchReq) ProtoReflect() protoreflect.Message {
	mi := &file_dropbox_proto_build_tools_svclib_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateBatchReq.ProtoReflect.Descriptor instead.
func (*CreateBatchReq) Descriptor() ([]byte, []int) {
	return file_dropbox_proto_build_tools_svclib_service_proto_rawDescGZIP(), []int{4}
}

func (x *CreateBatchReq) GetServices() []*Service {
	if x != nil {
		return x.Services
	}
	return nil
}

type RemoveBatchReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServiceNames []string `protobuf:"bytes,1,rep,name=service_names,json=serviceNames" json:"service_names,omitempty"` // required
}

func (x *RemoveBatchReq) Reset() {
	*x = RemoveBatchReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dropbox_proto_build_tools_svclib_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveBatchReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveBatchReq) ProtoMessage() {}

func (x *RemoveBatchReq) ProtoReflect() protoreflect.Message {
	mi := &file_dropbox_proto_build_tools_svclib_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveBatchReq.ProtoReflect.Descriptor instead.
func (*RemoveBatchReq) Descriptor() ([]byte, []int) {
	return file_dropbox_proto_build_tools_svclib_service_proto_rawDescGZIP(), []int{5}
}

func (x *RemoveBatchReq) GetServiceNames() []string {
	if x != nil {
		return x.ServiceNames
	}
	return nil
}

type StartReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServiceName    *string `protobuf:"bytes,1,opt,name=service_name,json=serviceName" json:"service_name,omitempty"`             // required
	WaitForHealthy *bool   `protobuf:"varint,2,opt,name=wait_for_healthy,json=waitForHealthy" json:"wait_for_healthy,omitempty"` // deprecated server always waits
}

func (x *StartReq) Reset() {
	*x = StartReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dropbox_proto_build_tools_svclib_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartReq) ProtoMessage() {}

func (x *StartReq) ProtoReflect() protoreflect.Message {
	mi := &file_dropbox_proto_build_tools_svclib_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartReq.ProtoReflect.Descriptor instead.
func (*StartReq) Descriptor() ([]byte, []int) {
	return file_dropbox_proto_build_tools_svclib_service_proto_rawDescGZIP(), []int{6}
}

func (x *StartReq) GetServiceName() string {
	if x != nil && x.ServiceName != nil {
		return *x.ServiceName
	}
	return ""
}

func (x *StartReq) GetWaitForHealthy() bool {
	if x != nil && x.WaitForHealthy != nil {
		return *x.WaitForHealthy
	}
	return false
}

// Stops a single service
type StopReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServiceName *string `protobuf:"bytes,1,opt,name=service_name,json=serviceName" json:"service_name,omitempty"` // required
}

func (x *StopReq) Reset() {
	*x = StopReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dropbox_proto_build_tools_svclib_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StopReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopReq) ProtoMessage() {}

func (x *StopReq) ProtoReflect() protoreflect.Message {
	mi := &file_dropbox_proto_build_tools_svclib_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopReq.ProtoReflect.Descriptor instead.
func (*StopReq) Descriptor() ([]byte, []int) {
	return file_dropbox_proto_build_tools_svclib_service_proto_rawDescGZIP(), []int{7}
}

func (x *StopReq) GetServiceName() string {
	if x != nil && x.ServiceName != nil {
		return *x.ServiceName
	}
	return ""
}

type StatusReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServiceNames []string `protobuf:"bytes,1,rep,name=service_names,json=serviceNames" json:"service_names,omitempty"`
}

func (x *StatusReq) Reset() {
	*x = StatusReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dropbox_proto_build_tools_svclib_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatusReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusReq) ProtoMessage() {}

func (x *StatusReq) ProtoReflect() protoreflect.Message {
	mi := &file_dropbox_proto_build_tools_svclib_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusReq.ProtoReflect.Descriptor instead.
func (*StatusReq) Descriptor() ([]byte, []int) {
	return file_dropbox_proto_build_tools_svclib_service_proto_rawDescGZIP(), []int{8}
}

func (x *StatusReq) GetServiceNames() []string {
	if x != nil {
		return x.ServiceNames
	}
	return nil
}

type StatusResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SvcStatus []*StatusResp_Status `protobuf:"bytes,1,rep,name=svc_status,json=svcStatus" json:"svc_status,omitempty"`
}

func (x *StatusResp) Reset() {
	*x = StatusResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dropbox_proto_build_tools_svclib_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatusResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusResp) ProtoMessage() {}

func (x *StatusResp) ProtoReflect() protoreflect.Message {
	mi := &file_dropbox_proto_build_tools_svclib_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusResp.ProtoReflect.Descriptor instead.
func (*StatusResp) Descriptor() ([]byte, []int) {
	return file_dropbox_proto_build_tools_svclib_service_proto_rawDescGZIP(), []int{9}
}

func (x *StatusResp) GetSvcStatus() []*StatusResp_Status {
	if x != nil {
		return x.SvcStatus
	}
	return nil
}

type DiagnosticsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServiceNames []string `protobuf:"bytes,1,rep,name=service_names,json=serviceNames" json:"service_names,omitempty"`
}

func (x *DiagnosticsReq) Reset() {
	*x = DiagnosticsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dropbox_proto_build_tools_svclib_service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DiagnosticsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiagnosticsReq) ProtoMessage() {}

func (x *DiagnosticsReq) ProtoReflect() protoreflect.Message {
	mi := &file_dropbox_proto_build_tools_svclib_service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiagnosticsReq.ProtoReflect.Descriptor instead.
func (*DiagnosticsReq) Descriptor() ([]byte, []int) {
	return file_dropbox_proto_build_tools_svclib_service_proto_rawDescGZIP(), []int{10}
}

func (x *DiagnosticsReq) GetServiceNames() []string {
	if x != nil {
		return x.ServiceNames
	}
	return nil
}

type DiagnosticsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SvcMetrics []*DiagnosticsResp_Metrics `protobuf:"bytes,1,rep,name=svc_metrics,json=svcMetrics" json:"svc_metrics,omitempty"`
}

func (x *DiagnosticsResp) Reset() {
	*x = DiagnosticsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dropbox_proto_build_tools_svclib_service_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DiagnosticsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiagnosticsResp) ProtoMessage() {}

func (x *DiagnosticsResp) ProtoReflect() protoreflect.Message {
	mi := &file_dropbox_proto_build_tools_svclib_service_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiagnosticsResp.ProtoReflect.Descriptor instead.
func (*DiagnosticsResp) Descriptor() ([]byte, []int) {
	return file_dropbox_proto_build_tools_svclib_service_proto_rawDescGZIP(), []int{11}
}

func (x *DiagnosticsResp) GetSvcMetrics() []*DiagnosticsResp_Metrics {
	if x != nil {
		return x.SvcMetrics
	}
	return nil
}

type Empty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Empty) Reset() {
	*x = Empty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dropbox_proto_build_tools_svclib_service_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_dropbox_proto_build_tools_svclib_service_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_dropbox_proto_build_tools_svclib_service_proto_rawDescGZIP(), []int{12}
}

type StopAllReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// don't bother with graceful termination, focus on stopping as soon as possible.
	UnsafeFastKill *bool `protobuf:"varint,1,opt,name=unsafe_fast_kill,json=unsafeFastKill" json:"unsafe_fast_kill,omitempty"`
}

func (x *StopAllReq) Reset() {
	*x = StopAllReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dropbox_proto_build_tools_svclib_service_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StopAllReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopAllReq) ProtoMessage() {}

func (x *StopAllReq) ProtoReflect() protoreflect.Message {
	mi := &file_dropbox_proto_build_tools_svclib_service_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopAllReq.ProtoReflect.Descriptor instead.
func (*StopAllReq) Descriptor() ([]byte, []int) {
	return file_dropbox_proto_build_tools_svclib_service_proto_rawDescGZIP(), []int{13}
}

func (x *StopAllReq) GetUnsafeFastKill() bool {
	if x != nil && x.UnsafeFastKill != nil {
		return *x.UnsafeFastKill
	}
	return false
}

type Command_EnvironmentVariable struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key   *string `protobuf:"bytes,1,req,name=key" json:"key,omitempty"`
	Value *string `protobuf:"bytes,2,req,name=value" json:"value,omitempty"`
}

func (x *Command_EnvironmentVariable) Reset() {
	*x = Command_EnvironmentVariable{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dropbox_proto_build_tools_svclib_service_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Command_EnvironmentVariable) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Command_EnvironmentVariable) ProtoMessage() {}

func (x *Command_EnvironmentVariable) ProtoReflect() protoreflect.Message {
	mi := &file_dropbox_proto_build_tools_svclib_service_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Command_EnvironmentVariable.ProtoReflect.Descriptor instead.
func (*Command_EnvironmentVariable) Descriptor() ([]byte, []int) {
	return file_dropbox_proto_build_tools_svclib_service_proto_rawDescGZIP(), []int{0, 0}
}

func (x *Command_EnvironmentVariable) GetKey() string {
	if x != nil && x.Key != nil {
		return *x.Key
	}
	return ""
}

func (x *Command_EnvironmentVariable) GetValue() string {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return ""
}

type StatusResp_FailureMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type *StatusResp_FailureMessage_FailureType `protobuf:"varint,1,opt,name=type,enum=build_tools.StatusResp_FailureMessage_FailureType" json:"type,omitempty"`
	Log  *string                                `protobuf:"bytes,2,opt,name=log" json:"log,omitempty"`
}

func (x *StatusResp_FailureMessage) Reset() {
	*x = StatusResp_FailureMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dropbox_proto_build_tools_svclib_service_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatusResp_FailureMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusResp_FailureMessage) ProtoMessage() {}

func (x *StatusResp_FailureMessage) ProtoReflect() protoreflect.Message {
	mi := &file_dropbox_proto_build_tools_svclib_service_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusResp_FailureMessage.ProtoReflect.Descriptor instead.
func (*StatusResp_FailureMessage) Descriptor() ([]byte, []int) {
	return file_dropbox_proto_build_tools_svclib_service_proto_rawDescGZIP(), []int{9, 0}
}

func (x *StatusResp_FailureMessage) GetType() StatusResp_FailureMessage_FailureType {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return StatusResp_FailureMessage_UNKNOWN
}

func (x *StatusResp_FailureMessage) GetLog() string {
	if x != nil && x.Log != nil {
		return *x.Log
	}
	return ""
}

type StatusResp_Status struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServiceName     *string                    `protobuf:"bytes,1,opt,name=service_name,json=serviceName" json:"service_name,omitempty"`                                      // required
	StatusCode      *StatusResp_StatusCode     `protobuf:"varint,2,opt,name=status_code,json=statusCode,enum=build_tools.StatusResp_StatusCode" json:"status_code,omitempty"` // required
	NeedsRestart    *bool                      `protobuf:"varint,3,opt,name=needs_restart,json=needsRestart" json:"needs_restart,omitempty"`
	LogFile         *string                    `protobuf:"bytes,4,opt,name=log_file,json=logFile" json:"log_file,omitempty"`
	Type            *Service_Type              `protobuf:"varint,5,opt,name=type,enum=build_tools.Service_Type" json:"type,omitempty"`
	StartDurationMs *int64                     `protobuf:"varint,6,opt,name=start_duration_ms,json=startDurationMs" json:"start_duration_ms,omitempty"`
	Owner           *string                    `protobuf:"bytes,7,opt,name=owner" json:"owner,omitempty"`
	FailureMessage  *StatusResp_FailureMessage `protobuf:"bytes,8,opt,name=failure_message,json=failureMessage" json:"failure_message,omitempty"`
	Pid             *int64                     `protobuf:"varint,9,opt,name=pid" json:"pid,omitempty"`
}

func (x *StatusResp_Status) Reset() {
	*x = StatusResp_Status{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dropbox_proto_build_tools_svclib_service_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatusResp_Status) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusResp_Status) ProtoMessage() {}

func (x *StatusResp_Status) ProtoReflect() protoreflect.Message {
	mi := &file_dropbox_proto_build_tools_svclib_service_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusResp_Status.ProtoReflect.Descriptor instead.
func (*StatusResp_Status) Descriptor() ([]byte, []int) {
	return file_dropbox_proto_build_tools_svclib_service_proto_rawDescGZIP(), []int{9, 1}
}

func (x *StatusResp_Status) GetServiceName() string {
	if x != nil && x.ServiceName != nil {
		return *x.ServiceName
	}
	return ""
}

func (x *StatusResp_Status) GetStatusCode() StatusResp_StatusCode {
	if x != nil && x.StatusCode != nil {
		return *x.StatusCode
	}
	return StatusResp_STOPPED
}

func (x *StatusResp_Status) GetNeedsRestart() bool {
	if x != nil && x.NeedsRestart != nil {
		return *x.NeedsRestart
	}
	return false
}

func (x *StatusResp_Status) GetLogFile() string {
	if x != nil && x.LogFile != nil {
		return *x.LogFile
	}
	return ""
}

func (x *StatusResp_Status) GetType() Service_Type {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return Service_DAEMON
}

func (x *StatusResp_Status) GetStartDurationMs() int64 {
	if x != nil && x.StartDurationMs != nil {
		return *x.StartDurationMs
	}
	return 0
}

func (x *StatusResp_Status) GetOwner() string {
	if x != nil && x.Owner != nil {
		return *x.Owner
	}
	return ""
}

func (x *StatusResp_Status) GetFailureMessage() *StatusResp_FailureMessage {
	if x != nil {
		return x.FailureMessage
	}
	return nil
}

func (x *StatusResp_Status) GetPid() int64 {
	if x != nil && x.Pid != nil {
		return *x.Pid
	}
	return 0
}

type DiagnosticsResp_Metrics struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServiceName *string `protobuf:"bytes,1,opt,name=service_name,json=serviceName" json:"service_name,omitempty"` // required
	CpuTimeMs   *int64  `protobuf:"varint,2,opt,name=cpu_time_ms,json=cpuTimeMs" json:"cpu_time_ms,omitempty"`
	// this will give a current snapshot of the memory used by all descendent processes.
	// Currently, this is called only at the end of the test run (therefore, this might not
	// be max memory usage). We think that's fine since this is mostly for catching
	// regressions or quantifying impact of improvements.
	RssMb *int64 `protobuf:"varint,3,opt,name=rss_mb,json=rssMb" json:"rss_mb,omitempty"`
}

func (x *DiagnosticsResp_Metrics) Reset() {
	*x = DiagnosticsResp_Metrics{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dropbox_proto_build_tools_svclib_service_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DiagnosticsResp_Metrics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiagnosticsResp_Metrics) ProtoMessage() {}

func (x *DiagnosticsResp_Metrics) ProtoReflect() protoreflect.Message {
	mi := &file_dropbox_proto_build_tools_svclib_service_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiagnosticsResp_Metrics.ProtoReflect.Descriptor instead.
func (*DiagnosticsResp_Metrics) Descriptor() ([]byte, []int) {
	return file_dropbox_proto_build_tools_svclib_service_proto_rawDescGZIP(), []int{11, 0}
}

func (x *DiagnosticsResp_Metrics) GetServiceName() string {
	if x != nil && x.ServiceName != nil {
		return *x.ServiceName
	}
	return ""
}

func (x *DiagnosticsResp_Metrics) GetCpuTimeMs() int64 {
	if x != nil && x.CpuTimeMs != nil {
		return *x.CpuTimeMs
	}
	return 0
}

func (x *DiagnosticsResp_Metrics) GetRssMb() int64 {
	if x != nil && x.RssMb != nil {
		return *x.RssMb
	}
	return 0
}

var File_dropbox_proto_build_tools_svclib_service_proto protoreflect.FileDescriptor

var file_dropbox_proto_build_tools_svclib_service_proto_rawDesc = []byte{
	0x0a, 0x2e, 0x64, 0x72, 0x6f, 0x70, 0x62, 0x6f, 0x78, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f,
	0x62, 0x75, 0x69, 0x6c, 0x64, 0x5f, 0x74, 0x6f, 0x6f, 0x6c, 0x73, 0x2f, 0x73, 0x76, 0x63, 0x6c,
	0x69, 0x62, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x0b, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x5f, 0x74, 0x6f, 0x6f, 0x6c, 0x73, 0x22, 0x9f, 0x01,
	0x0a, 0x07, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x6d, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x63, 0x6d, 0x64, 0x12, 0x43, 0x0a, 0x08, 0x65,
	0x6e, 0x76, 0x5f, 0x76, 0x61, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e,
	0x62, 0x75, 0x69, 0x6c, 0x64, 0x5f, 0x74, 0x6f, 0x6f, 0x6c, 0x73, 0x2e, 0x43, 0x6f, 0x6d, 0x6d,
	0x61, 0x6e, 0x64, 0x2e, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x56,
	0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x07, 0x65, 0x6e, 0x76, 0x56, 0x61, 0x72, 0x73,
	0x1a, 0x3d, 0x0a, 0x13, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x56,
	0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x02, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22,
	0x23, 0x0a, 0x0f, 0x48, 0x74, 0x74, 0x70, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x75, 0x72, 0x6c, 0x22, 0xde, 0x01, 0x0a, 0x0b, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x12, 0x31, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x5f, 0x74, 0x6f, 0x6f, 0x6c, 0x73,
	0x2e, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x2e, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x26, 0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x5f, 0x74, 0x6f, 0x6f,
	0x6c, 0x73, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x03, 0x63, 0x6d, 0x64, 0x12,
	0x48, 0x0a, 0x11, 0x68, 0x74, 0x74, 0x70, 0x5f, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x5f, 0x63,
	0x68, 0x65, 0x63, 0x6b, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x62, 0x75, 0x69,
	0x6c, 0x64, 0x5f, 0x74, 0x6f, 0x6f, 0x6c, 0x73, 0x2e, 0x48, 0x74, 0x74, 0x70, 0x48, 0x65, 0x61,
	0x6c, 0x74, 0x68, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x0f, 0x68, 0x74, 0x74, 0x70, 0x48, 0x65,
	0x61, 0x6c, 0x74, 0x68, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x22, 0x2a, 0x0a, 0x04, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x0b,
	0x0a, 0x07, 0x43, 0x4f, 0x4d, 0x4d, 0x41, 0x4e, 0x44, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x48,
	0x54, 0x54, 0x50, 0x10, 0x05, 0x22, 0xe7, 0x03, 0x0a, 0x07, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x33, 0x0a, 0x0a, 0x6c, 0x61, 0x75, 0x6e, 0x63, 0x68, 0x5f, 0x63,
	0x6d, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x62, 0x75, 0x69, 0x6c, 0x64,
	0x5f, 0x74, 0x6f, 0x6f, 0x6c, 0x73, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x09,
	0x6c, 0x61, 0x75, 0x6e, 0x63, 0x68, 0x43, 0x6d, 0x64, 0x12, 0x3d, 0x0a, 0x0d, 0x68, 0x65, 0x61,
	0x6c, 0x74, 0x68, 0x5f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x5f, 0x74, 0x6f, 0x6f, 0x6c, 0x73, 0x2e, 0x48,
	0x65, 0x61, 0x6c, 0x74, 0x68, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x0c, 0x68, 0x65, 0x61, 0x6c,
	0x74, 0x68, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x64, 0x65, 0x70, 0x65,
	0x6e, 0x64, 0x65, 0x6e, 0x63, 0x69, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c,
	0x64, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x69, 0x65, 0x73, 0x12, 0x2f, 0x0a, 0x08,
	0x73, 0x74, 0x6f, 0x70, 0x5f, 0x63, 0x6d, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x5f, 0x74, 0x6f, 0x6f, 0x6c, 0x73, 0x2e, 0x43, 0x6f, 0x6d,
	0x6d, 0x61, 0x6e, 0x64, 0x52, 0x07, 0x73, 0x74, 0x6f, 0x70, 0x43, 0x6d, 0x64, 0x12, 0x2d, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x62, 0x75,
	0x69, 0x6c, 0x64, 0x5f, 0x74, 0x6f, 0x6f, 0x6c, 0x73, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x76, 0x65, 0x72, 0x62, 0x6f, 0x73, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x76,
	0x65, 0x72, 0x62, 0x6f, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x4e, 0x0a, 0x18,
	0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x5f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x73, 0x5f, 0x64, 0x65,
	0x70, 0x72, 0x65, 0x63, 0x61, 0x74, 0x65, 0x64, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x5f, 0x74, 0x6f, 0x6f, 0x6c, 0x73, 0x2e, 0x43, 0x6f, 0x6d,
	0x6d, 0x61, 0x6e, 0x64, 0x52, 0x16, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x43, 0x68, 0x65, 0x63,
	0x6b, 0x73, 0x44, 0x65, 0x70, 0x72, 0x65, 0x63, 0x61, 0x74, 0x65, 0x64, 0x12, 0x23, 0x0a, 0x0d,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x18, 0x0c, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x0c, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x6c, 0x65,
	0x73, 0x22, 0x1c, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0a, 0x0a, 0x06, 0x44, 0x41, 0x45,
	0x4d, 0x4f, 0x4e, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x54, 0x41, 0x53, 0x4b, 0x10, 0x01, 0x22,
	0x42, 0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65,
	0x71, 0x12, 0x30, 0x0a, 0x08, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x5f, 0x74, 0x6f, 0x6f, 0x6c,
	0x73, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x08, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x22, 0x35, 0x0a, 0x0e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x42, 0x61, 0x74,
	0x63, 0x68, 0x52, 0x65, 0x71, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x22, 0x57, 0x0a, 0x08, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x52, 0x65, 0x71, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x77, 0x61, 0x69,
	0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x79, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0e, 0x77, 0x61, 0x69, 0x74, 0x46, 0x6f, 0x72, 0x48, 0x65, 0x61, 0x6c,
	0x74, 0x68, 0x79, 0x22, 0x2c, 0x0a, 0x07, 0x53, 0x74, 0x6f, 0x70, 0x52, 0x65, 0x71, 0x12, 0x21,
	0x0a, 0x0c, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x22, 0x30, 0x0a, 0x09, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x12, 0x23,
	0x0a, 0x0d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x73, 0x22, 0xe3, 0x05, 0x0a, 0x0a, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x3d, 0x0a, 0x0a, 0x73, 0x76, 0x63, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x5f, 0x74,
	0x6f, 0x6f, 0x6c, 0x73, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x2e,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x09, 0x73, 0x76, 0x63, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x1a, 0x95, 0x01, 0x0a, 0x0e, 0x46, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x46, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x32, 0x2e, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x5f, 0x74, 0x6f, 0x6f, 0x6c, 0x73,
	0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x2e, 0x46, 0x61, 0x69, 0x6c,
	0x75, 0x72, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x46, 0x61, 0x69, 0x6c, 0x75,
	0x72, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x6c, 0x6f, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6c, 0x6f, 0x67, 0x22, 0x29,
	0x0a, 0x0b, 0x46, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0b, 0x0a,
	0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x48, 0x41,
	0x53, 0x5f, 0x52, 0x41, 0x43, 0x45, 0x53, 0x10, 0x01, 0x1a, 0x84, 0x03, 0x0a, 0x06, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x43, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x22, 0x2e, 0x62,
	0x75, 0x69, 0x6c, 0x64, 0x5f, 0x74, 0x6f, 0x6f, 0x6c, 0x73, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65,
	0x52, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x23, 0x0a, 0x0d,
	0x6e, 0x65, 0x65, 0x64, 0x73, 0x5f, 0x72, 0x65, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0c, 0x6e, 0x65, 0x65, 0x64, 0x73, 0x52, 0x65, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x12, 0x19, 0x0a, 0x08, 0x6c, 0x6f, 0x67, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6c, 0x6f, 0x67, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x2d, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x62, 0x75, 0x69,
	0x6c, 0x64, 0x5f, 0x74, 0x6f, 0x6f, 0x6c, 0x73, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x2a, 0x0a, 0x11, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x5f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x73,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x44, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x4f, 0x0a,
	0x0f, 0x66, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x5f, 0x74,
	0x6f, 0x6f, 0x6c, 0x73, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x2e,
	0x46, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x0e,
	0x66, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x70, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x70, 0x69, 0x64,
	0x22, 0x77, 0x0a, 0x0a, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x0b,
	0x0a, 0x07, 0x53, 0x54, 0x4f, 0x50, 0x50, 0x45, 0x44, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x45,
	0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x53, 0x54, 0x41, 0x52, 0x54, 0x49,
	0x4e, 0x47, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x54, 0x41, 0x52, 0x54, 0x45, 0x44, 0x10,
	0x03, 0x12, 0x19, 0x0a, 0x15, 0x57, 0x41, 0x49, 0x54, 0x49, 0x4e, 0x47, 0x5f, 0x46, 0x4f, 0x52,
	0x5f, 0x44, 0x45, 0x50, 0x45, 0x4e, 0x44, 0x45, 0x4e, 0x54, 0x10, 0x04, 0x12, 0x0d, 0x0a, 0x09,
	0x43, 0x4f, 0x4d, 0x50, 0x4c, 0x45, 0x54, 0x45, 0x44, 0x10, 0x05, 0x12, 0x0c, 0x0a, 0x08, 0x53,
	0x54, 0x4f, 0x50, 0x50, 0x49, 0x4e, 0x47, 0x10, 0x06, 0x22, 0x35, 0x0a, 0x0e, 0x44, 0x69, 0x61,
	0x67, 0x6e, 0x6f, 0x73, 0x74, 0x69, 0x63, 0x73, 0x52, 0x65, 0x71, 0x12, 0x23, 0x0a, 0x0d, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x0c, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x73,
	0x22, 0xbd, 0x01, 0x0a, 0x0f, 0x44, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x74, 0x69, 0x63, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x45, 0x0a, 0x0b, 0x73, 0x76, 0x63, 0x5f, 0x6d, 0x65, 0x74, 0x72,
	0x69, 0x63, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x62, 0x75, 0x69, 0x6c,
	0x64, 0x5f, 0x74, 0x6f, 0x6f, 0x6c, 0x73, 0x2e, 0x44, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x74,
	0x69, 0x63, 0x73, 0x52, 0x65, 0x73, 0x70, 0x2e, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x52,
	0x0a, 0x73, 0x76, 0x63, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x1a, 0x63, 0x0a, 0x07, 0x4d,
	0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0b, 0x63, 0x70, 0x75,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x63, 0x70, 0x75, 0x54, 0x69, 0x6d, 0x65, 0x4d, 0x73, 0x12, 0x15, 0x0a, 0x06, 0x72, 0x73, 0x73,
	0x5f, 0x6d, 0x62, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x72, 0x73, 0x73, 0x4d, 0x62,
	0x22, 0x07, 0x0a, 0x05, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x36, 0x0a, 0x0a, 0x53, 0x74, 0x6f,
	0x70, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x28, 0x0a, 0x10, 0x75, 0x6e, 0x73, 0x61, 0x66,
	0x65, 0x5f, 0x66, 0x61, 0x73, 0x74, 0x5f, 0x6b, 0x69, 0x6c, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0e, 0x75, 0x6e, 0x73, 0x61, 0x66, 0x65, 0x46, 0x61, 0x73, 0x74, 0x4b, 0x69, 0x6c,
	0x6c, 0x32, 0xad, 0x03, 0x0a, 0x06, 0x53, 0x76, 0x63, 0x43, 0x74, 0x6c, 0x12, 0x3e, 0x0a, 0x0b,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x61, 0x74, 0x63, 0x68, 0x12, 0x1b, 0x2e, 0x62, 0x75,
	0x69, 0x6c, 0x64, 0x5f, 0x74, 0x6f, 0x6f, 0x6c, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x42, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x71, 0x1a, 0x12, 0x2e, 0x62, 0x75, 0x69, 0x6c, 0x64,
	0x5f, 0x74, 0x6f, 0x6f, 0x6c, 0x73, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x3e, 0x0a, 0x0b,
	0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x42, 0x61, 0x74, 0x63, 0x68, 0x12, 0x1b, 0x2e, 0x62, 0x75,
	0x69, 0x6c, 0x64, 0x5f, 0x74, 0x6f, 0x6f, 0x6c, 0x73, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65,
	0x42, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x71, 0x1a, 0x12, 0x2e, 0x62, 0x75, 0x69, 0x6c, 0x64,
	0x5f, 0x74, 0x6f, 0x6f, 0x6c, 0x73, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x34, 0x0a, 0x05,
	0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x15, 0x2e, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x5f, 0x74, 0x6f,
	0x6f, 0x6c, 0x73, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x12, 0x2e, 0x62,
	0x75, 0x69, 0x6c, 0x64, 0x5f, 0x74, 0x6f, 0x6f, 0x6c, 0x73, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x28, 0x01, 0x12, 0x30, 0x0a, 0x04, 0x53, 0x74, 0x6f, 0x70, 0x12, 0x14, 0x2e, 0x62, 0x75, 0x69,
	0x6c, 0x64, 0x5f, 0x74, 0x6f, 0x6f, 0x6c, 0x73, 0x2e, 0x53, 0x74, 0x6f, 0x70, 0x52, 0x65, 0x71,
	0x1a, 0x12, 0x2e, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x5f, 0x74, 0x6f, 0x6f, 0x6c, 0x73, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x12, 0x36, 0x0a, 0x07, 0x53, 0x74, 0x6f, 0x70, 0x41, 0x6c, 0x6c, 0x12,
	0x17, 0x2e, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x5f, 0x74, 0x6f, 0x6f, 0x6c, 0x73, 0x2e, 0x53, 0x74,
	0x6f, 0x70, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x1a, 0x12, 0x2e, 0x62, 0x75, 0x69, 0x6c, 0x64,
	0x5f, 0x74, 0x6f, 0x6f, 0x6c, 0x73, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x39, 0x0a, 0x06,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x2e, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x5f, 0x74,
	0x6f, 0x6f, 0x6c, 0x73, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x17,
	0x2e, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x5f, 0x74, 0x6f, 0x6f, 0x6c, 0x73, 0x2e, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x48, 0x0a, 0x0b, 0x44, 0x69, 0x61, 0x67, 0x6e,
	0x6f, 0x73, 0x74, 0x69, 0x63, 0x73, 0x12, 0x1b, 0x2e, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x5f, 0x74,
	0x6f, 0x6f, 0x6c, 0x73, 0x2e, 0x44, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x74, 0x69, 0x63, 0x73,
	0x52, 0x65, 0x71, 0x1a, 0x1c, 0x2e, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x5f, 0x74, 0x6f, 0x6f, 0x6c,
	0x73, 0x2e, 0x44, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x74, 0x69, 0x63, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x42, 0x4a, 0x0a, 0x24, 0x63, 0x6f, 0x6d, 0x2e, 0x64, 0x72, 0x6f, 0x70, 0x62, 0x6f, 0x78,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x5f, 0x74, 0x6f, 0x6f,
	0x6c, 0x73, 0x2e, 0x73, 0x76, 0x63, 0x6c, 0x69, 0x62, 0x50, 0x01, 0x5a, 0x20, 0x64, 0x72, 0x6f,
	0x70, 0x62, 0x6f, 0x78, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x62, 0x75, 0x69, 0x6c, 0x64,
	0x5f, 0x74, 0x6f, 0x6f, 0x6c, 0x73, 0x2f, 0x73, 0x76, 0x63, 0x6c, 0x69, 0x62,
}

var (
	file_dropbox_proto_build_tools_svclib_service_proto_rawDescOnce sync.Once
	file_dropbox_proto_build_tools_svclib_service_proto_rawDescData = file_dropbox_proto_build_tools_svclib_service_proto_rawDesc
)

func file_dropbox_proto_build_tools_svclib_service_proto_rawDescGZIP() []byte {
	file_dropbox_proto_build_tools_svclib_service_proto_rawDescOnce.Do(func() {
		file_dropbox_proto_build_tools_svclib_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_dropbox_proto_build_tools_svclib_service_proto_rawDescData)
	})
	return file_dropbox_proto_build_tools_svclib_service_proto_rawDescData
}

var file_dropbox_proto_build_tools_svclib_service_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_dropbox_proto_build_tools_svclib_service_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_dropbox_proto_build_tools_svclib_service_proto_goTypes = []interface{}{
	(HealthCheck_Type)(0),                      // 0: build_tools.HealthCheck.Type
	(Service_Type)(0),                          // 1: build_tools.Service.Type
	(StatusResp_StatusCode)(0),                 // 2: build_tools.StatusResp.StatusCode
	(StatusResp_FailureMessage_FailureType)(0), // 3: build_tools.StatusResp.FailureMessage.FailureType
	(*Command)(nil),                            // 4: build_tools.Command
	(*HttpHealthCheck)(nil),                    // 5: build_tools.HttpHealthCheck
	(*HealthCheck)(nil),                        // 6: build_tools.HealthCheck
	(*Service)(nil),                            // 7: build_tools.Service
	(*CreateBatchReq)(nil),                     // 8: build_tools.CreateBatchReq
	(*RemoveBatchReq)(nil),                     // 9: build_tools.RemoveBatchReq
	(*StartReq)(nil),                           // 10: build_tools.StartReq
	(*StopReq)(nil),                            // 11: build_tools.StopReq
	(*StatusReq)(nil),                          // 12: build_tools.StatusReq
	(*StatusResp)(nil),                         // 13: build_tools.StatusResp
	(*DiagnosticsReq)(nil),                     // 14: build_tools.DiagnosticsReq
	(*DiagnosticsResp)(nil),                    // 15: build_tools.DiagnosticsResp
	(*Empty)(nil),                              // 16: build_tools.Empty
	(*StopAllReq)(nil),                         // 17: build_tools.StopAllReq
	(*Command_EnvironmentVariable)(nil),        // 18: build_tools.Command.EnvironmentVariable
	(*StatusResp_FailureMessage)(nil),          // 19: build_tools.StatusResp.FailureMessage
	(*StatusResp_Status)(nil),                  // 20: build_tools.StatusResp.Status
	(*DiagnosticsResp_Metrics)(nil),            // 21: build_tools.DiagnosticsResp.Metrics
}
var file_dropbox_proto_build_tools_svclib_service_proto_depIdxs = []int32{
	18, // 0: build_tools.Command.env_vars:type_name -> build_tools.Command.EnvironmentVariable
	0,  // 1: build_tools.HealthCheck.type:type_name -> build_tools.HealthCheck.Type
	4,  // 2: build_tools.HealthCheck.cmd:type_name -> build_tools.Command
	5,  // 3: build_tools.HealthCheck.http_health_check:type_name -> build_tools.HttpHealthCheck
	4,  // 4: build_tools.Service.launch_cmd:type_name -> build_tools.Command
	6,  // 5: build_tools.Service.health_checks:type_name -> build_tools.HealthCheck
	4,  // 6: build_tools.Service.stop_cmd:type_name -> build_tools.Command
	1,  // 7: build_tools.Service.type:type_name -> build_tools.Service.Type
	4,  // 8: build_tools.Service.health_checks_deprecated:type_name -> build_tools.Command
	7,  // 9: build_tools.CreateBatchReq.services:type_name -> build_tools.Service
	20, // 10: build_tools.StatusResp.svc_status:type_name -> build_tools.StatusResp.Status
	21, // 11: build_tools.DiagnosticsResp.svc_metrics:type_name -> build_tools.DiagnosticsResp.Metrics
	3,  // 12: build_tools.StatusResp.FailureMessage.type:type_name -> build_tools.StatusResp.FailureMessage.FailureType
	2,  // 13: build_tools.StatusResp.Status.status_code:type_name -> build_tools.StatusResp.StatusCode
	1,  // 14: build_tools.StatusResp.Status.type:type_name -> build_tools.Service.Type
	19, // 15: build_tools.StatusResp.Status.failure_message:type_name -> build_tools.StatusResp.FailureMessage
	8,  // 16: build_tools.SvcCtl.CreateBatch:input_type -> build_tools.CreateBatchReq
	9,  // 17: build_tools.SvcCtl.RemoveBatch:input_type -> build_tools.RemoveBatchReq
	10, // 18: build_tools.SvcCtl.Start:input_type -> build_tools.StartReq
	11, // 19: build_tools.SvcCtl.Stop:input_type -> build_tools.StopReq
	17, // 20: build_tools.SvcCtl.StopAll:input_type -> build_tools.StopAllReq
	12, // 21: build_tools.SvcCtl.Status:input_type -> build_tools.StatusReq
	14, // 22: build_tools.SvcCtl.Diagnostics:input_type -> build_tools.DiagnosticsReq
	16, // 23: build_tools.SvcCtl.CreateBatch:output_type -> build_tools.Empty
	16, // 24: build_tools.SvcCtl.RemoveBatch:output_type -> build_tools.Empty
	16, // 25: build_tools.SvcCtl.Start:output_type -> build_tools.Empty
	16, // 26: build_tools.SvcCtl.Stop:output_type -> build_tools.Empty
	16, // 27: build_tools.SvcCtl.StopAll:output_type -> build_tools.Empty
	13, // 28: build_tools.SvcCtl.Status:output_type -> build_tools.StatusResp
	15, // 29: build_tools.SvcCtl.Diagnostics:output_type -> build_tools.DiagnosticsResp
	23, // [23:30] is the sub-list for method output_type
	16, // [16:23] is the sub-list for method input_type
	16, // [16:16] is the sub-list for extension type_name
	16, // [16:16] is the sub-list for extension extendee
	0,  // [0:16] is the sub-list for field type_name
}

func init() { file_dropbox_proto_build_tools_svclib_service_proto_init() }
func file_dropbox_proto_build_tools_svclib_service_proto_init() {
	if File_dropbox_proto_build_tools_svclib_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_dropbox_proto_build_tools_svclib_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Command); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dropbox_proto_build_tools_svclib_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HttpHealthCheck); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dropbox_proto_build_tools_svclib_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HealthCheck); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dropbox_proto_build_tools_svclib_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Service); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dropbox_proto_build_tools_svclib_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateBatchReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dropbox_proto_build_tools_svclib_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveBatchReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dropbox_proto_build_tools_svclib_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dropbox_proto_build_tools_svclib_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StopReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dropbox_proto_build_tools_svclib_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatusReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dropbox_proto_build_tools_svclib_service_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatusResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dropbox_proto_build_tools_svclib_service_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DiagnosticsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dropbox_proto_build_tools_svclib_service_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DiagnosticsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dropbox_proto_build_tools_svclib_service_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Empty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dropbox_proto_build_tools_svclib_service_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StopAllReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dropbox_proto_build_tools_svclib_service_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Command_EnvironmentVariable); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dropbox_proto_build_tools_svclib_service_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatusResp_FailureMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dropbox_proto_build_tools_svclib_service_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatusResp_Status); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dropbox_proto_build_tools_svclib_service_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DiagnosticsResp_Metrics); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_dropbox_proto_build_tools_svclib_service_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_dropbox_proto_build_tools_svclib_service_proto_goTypes,
		DependencyIndexes: file_dropbox_proto_build_tools_svclib_service_proto_depIdxs,
		EnumInfos:         file_dropbox_proto_build_tools_svclib_service_proto_enumTypes,
		MessageInfos:      file_dropbox_proto_build_tools_svclib_service_proto_msgTypes,
	}.Build()
	File_dropbox_proto_build_tools_svclib_service_proto = out.File
	file_dropbox_proto_build_tools_svclib_service_proto_rawDesc = nil
	file_dropbox_proto_build_tools_svclib_service_proto_goTypes = nil
	file_dropbox_proto_build_tools_svclib_service_proto_depIdxs = nil
}
